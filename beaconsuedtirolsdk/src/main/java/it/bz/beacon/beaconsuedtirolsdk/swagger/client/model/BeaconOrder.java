// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

/**
 * Beacon Suedtirol API
 * The API for the Beacon Suedtirol project for configuring beacons and accessing beacon data.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.bz.beacon.beaconsuedtirolsdk.swagger.client.model;

import it.bz.beacon.beaconsuedtirolsdk.swagger.client.model.BeaconOrderData;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class BeaconOrder {
  
  @SerializedName("beacons")
  private List<BeaconOrderData> beacons = null;
  @SerializedName("orderSymbol")
  private String orderSymbol = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<BeaconOrderData> getBeacons() {
    return beacons;
  }
  public void setBeacons(List<BeaconOrderData> beacons) {
    this.beacons = beacons;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrderSymbol() {
    return orderSymbol;
  }
  public void setOrderSymbol(String orderSymbol) {
    this.orderSymbol = orderSymbol;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeaconOrder beaconOrder = (BeaconOrder) o;
    return (this.beacons == null ? beaconOrder.beacons == null : this.beacons.equals(beaconOrder.beacons)) &&
        (this.orderSymbol == null ? beaconOrder.orderSymbol == null : this.orderSymbol.equals(beaconOrder.orderSymbol));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.beacons == null ? 0: this.beacons.hashCode());
    result = 31 * result + (this.orderSymbol == null ? 0: this.orderSymbol.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeaconOrder {\n");
    
    sb.append("  beacons: ").append(beacons).append("\n");
    sb.append("  orderSymbol: ").append(orderSymbol).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
