// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

/**
 * Beacon Suedtirol API
 * The API for the Beacon Suedtirol project for configuring beacons and accessing beacon data.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.bz.beacon.beaconsuedtirolsdk.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class IssueCreation {
  
  @SerializedName("beaconId")
  private String beaconId = null;
  @SerializedName("problem")
  private String problem = null;
  @SerializedName("problemDescription")
  private String problemDescription = null;
  @SerializedName("reporter")
  private String reporter = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getBeaconId() {
    return beaconId;
  }
  public void setBeaconId(String beaconId) {
    this.beaconId = beaconId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getProblem() {
    return problem;
  }
  public void setProblem(String problem) {
    this.problem = problem;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getProblemDescription() {
    return problemDescription;
  }
  public void setProblemDescription(String problemDescription) {
    this.problemDescription = problemDescription;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getReporter() {
    return reporter;
  }
  public void setReporter(String reporter) {
    this.reporter = reporter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueCreation issueCreation = (IssueCreation) o;
    return (this.beaconId == null ? issueCreation.beaconId == null : this.beaconId.equals(issueCreation.beaconId)) &&
        (this.problem == null ? issueCreation.problem == null : this.problem.equals(issueCreation.problem)) &&
        (this.problemDescription == null ? issueCreation.problemDescription == null : this.problemDescription.equals(issueCreation.problemDescription)) &&
        (this.reporter == null ? issueCreation.reporter == null : this.reporter.equals(issueCreation.reporter));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.beaconId == null ? 0: this.beaconId.hashCode());
    result = 31 * result + (this.problem == null ? 0: this.problem.hashCode());
    result = 31 * result + (this.problemDescription == null ? 0: this.problemDescription.hashCode());
    result = 31 * result + (this.reporter == null ? 0: this.reporter.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueCreation {\n");
    
    sb.append("  beaconId: ").append(beaconId).append("\n");
    sb.append("  problem: ").append(problem).append("\n");
    sb.append("  problemDescription: ").append(problemDescription).append("\n");
    sb.append("  reporter: ").append(reporter).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
