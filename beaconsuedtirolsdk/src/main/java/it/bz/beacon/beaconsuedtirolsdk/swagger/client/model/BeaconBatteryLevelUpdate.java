// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

/**
 * Beacon Suedtirol API
 * The API for the Beacon Suedtirol project for configuring beacons and accessing beacon data.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.bz.beacon.beaconsuedtirolsdk.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class BeaconBatteryLevelUpdate {
  
  @SerializedName("batteryLevel")
  private Integer batteryLevel = null;

  /**
   * minimum: 0
   * maximum: 100
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getBatteryLevel() {
    return batteryLevel;
  }
  public void setBatteryLevel(Integer batteryLevel) {
    this.batteryLevel = batteryLevel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeaconBatteryLevelUpdate beaconBatteryLevelUpdate = (BeaconBatteryLevelUpdate) o;
    return (this.batteryLevel == null ? beaconBatteryLevelUpdate.batteryLevel == null : this.batteryLevel.equals(beaconBatteryLevelUpdate.batteryLevel));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.batteryLevel == null ? 0: this.batteryLevel.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeaconBatteryLevelUpdate {\n");
    
    sb.append("  batteryLevel: ").append(batteryLevel).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
